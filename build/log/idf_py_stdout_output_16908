[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\Sotatek\espDev\Espressif\frameworks\esp-idf-v5.0.2\examples\get-started\sample_project\build\bootloader\esp-idf\esptool_py && D:\Sotatek\espDev\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/7] Building C object esp-idf/mqtt_tcp/CMakeFiles/__idf_mqtt_tcp.dir/source/bee_Mqtt.c.obj
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_Mqtt.c: In function 'mqtt_vPublish_data_task':
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_Mqtt.c:227:61: warning: passing argument 3 of 'cJSON_AddItemToObject' from incompatible pointer type [-Wincompatible-pointer-types]
  227 |                     cJSON_AddItemToObject(root, "cmd_name", "Bee.data");
      |                                                             ^~~~~~~~~~
      |                                                             |
      |                                                             char *
In file included from D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_Mqtt.c:12:
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_cJSON.h:249:69: note: expected 'cJSON *' but argument is of type 'char *'
  249 |     cJSON_AddItemToObject(cJSON *object, const char *string, cJSON *item);
      |                                                              ~~~~~~~^~~~
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_Mqtt.c:228:64: warning: passing argument 3 of 'cJSON_AddItemToObject' from incompatible pointer type [-Wincompatible-pointer-types]
  228 |                     cJSON_AddItemToObject(root, "object_type", "Bee.temperature");
      |                                                                ^~~~~~~~~~~~~~~~~
      |                                                                |
      |                                                                char *
In file included from D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_Mqtt.c:12:
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_cJSON.h:249:69: note: expected 'cJSON *' but argument is of type 'char *'
  249 |     cJSON_AddItemToObject(cJSON *object, const char *string, cJSON *item);
      |                                                              ~~~~~~~^~~~
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_Mqtt.c:181:11: warning: unused variable 'message_keep_alive' [-Wunused-variable]
  181 |     char *message_keep_alive;
      |           ^~~~~~~~~~~~~~~~~~
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_Mqtt.c:180:11: warning: unused variable 'data_hum' [-Wunused-variable]
  180 |     char *data_hum;
      |           ^~~~~~~~
At top level:
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/library/mqtt_tcp/source/bee_Mqtt.c:35:13: warning: 'mqtt_check_error_to_publish_warning' defined but not used [-Wunused-function]
   35 | static void mqtt_check_error_to_publish_warning()
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[3/7] Linking C static library esp-idf\mqtt_tcp\libmqtt_tcp.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable main.elf
[6/7] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/build/main.bin
[7/7] cmd.exe /C "cd /D D:\Sotatek\espDev\Espressif\frameworks\esp-idf-v5.0.2\examples\get-started\sample_project\build\esp-idf\esptool_py && D:\Sotatek\espDev\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/build/partition_table/partition-table.bin D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/examples/get-started/sample_project/build/main.bin"
main.bin binary size 0xdc650 bytes. Smallest app partition is 0x100000 bytes. 0x239b0 bytes (14%) free.
