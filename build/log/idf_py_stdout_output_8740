[1/20] Building C object esp-idf/flash/CMakeFiles/__idf_flash.dir/source/flash.c.obj
D:/Sotatek/sample_project/library/flash/source/flash.c: In function 'flash_vFlashClose':
D:/Sotatek/sample_project/library/flash/source/flash.c:31:15: warning: passing argument 1 of 'nvs_close' makes integer from pointer without a cast [-Wint-conversion]
   31 |     nvs_close(p_myHandle);
      |               ^~~~~~~~~~
      |               |
      |               nvs_handle_t * {aka long unsigned int *}
In file included from D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/nvs_flash/include/nvs_flash.h:21,
                 from D:/Sotatek/sample_project/library/flash/source/flash.c:9:
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/nvs_flash/include/nvs.h:533:29: note: expected 'nvs_handle_t' {aka 'long unsigned int'} but argument is of type 'nvs_handle_t *' {aka 'long unsigned int *'}
  533 | void nvs_close(nvs_handle_t handle);
      |                ~~~~~~~~~~~~~^~~~~~
D:/Sotatek/sample_project/library/flash/source/flash.c: In function 'flash_u8FlashWriteU8':
D:/Sotatek/sample_project/library/flash/source/flash.c:63:15: warning: passing argument 1 of 'nvs_close' makes integer from pointer without a cast [-Wint-conversion]
   63 |     nvs_close(&p_myHandle);
      |               ^~~~~~~~~~~
      |               |
      |               nvs_handle_t ** {aka long unsigned int **}
In file included from D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/nvs_flash/include/nvs_flash.h:21,
                 from D:/Sotatek/sample_project/library/flash/source/flash.c:9:
D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/nvs_flash/include/nvs.h:533:29: note: expected 'nvs_handle_t' {aka 'long unsigned int'} but argument is of type 'nvs_handle_t **' {aka 'long unsigned int **'}
  533 | void nvs_close(nvs_handle_t handle);
      |                ~~~~~~~~~~~~~^~~~~~
[2/20] Building C object esp-idf/button/CMakeFiles/__idf_button.dir/source/button.c.obj
[3/20] Building C object esp-idf/output/CMakeFiles/__idf_output.dir/source/output_gpio.c.obj
[4/20] Linking C static library esp-idf\button\libbutton.a
[5/20] Linking C static library esp-idf\flash\libflash.a
[6/20] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\Sotatek\sample_project\build\bootloader\esp-idf\esptool_py && D:\Sotatek\espDev\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Sotatek/sample_project/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[7/18] Linking C static library esp-idf\output\liboutput.a
[8/18] Building C object esp-idf/DHT11/CMakeFiles/__idf_DHT11.dir/source/DHT.c.obj
[9/18] Building C object esp-idf/uart/CMakeFiles/__idf_uart.dir/source/uart.c.obj
[10/18] Linking C static library esp-idf\DHT11\libDHT11.a
[11/18] Linking C static library esp-idf\uart\libuart.a
[12/18] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.c.obj
[13/18] Linking C static library esp-idf\main\libmain.a
[14/18] Generating ld/sections.ld
[15/18] Linking CXX executable main.elf
[16/18] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/Sotatek/sample_project/build/main.bin
[17/18] cmd.exe /C "cd /D D:\Sotatek\sample_project\build\esp-idf\esptool_py && D:\Sotatek\espDev\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Sotatek/sample_project/build/partition_table/partition-table.bin D:/Sotatek/sample_project/build/main.bin"
main.bin binary size 0x38570 bytes. Smallest app partition is 0x100000 bytes. 0xc7a90 bytes (78%) free.
[17/18] cmd.exe /C "cd /D D:\Sotatek\espDev\Espressif\frameworks\esp-idf-v5.0.2\components\esptool_py && D:\Sotatek\espDev\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2 -D SERIAL_TOOL=D:/Sotatek/espDev/Espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/Sotatek/sample_project/build -P D:/Sotatek/espDev/Espressif/frameworks/esp-idf-v5.0.2/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM7 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM7
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c8:f0:9e:f2:5c:f8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00048fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16459...
Writing at 0x00001000... (50 %)
Writing at 0x000076ad... (100 %)
Wrote 26384 bytes (16459 compressed) at 0x00001000 in 0.8 seconds (effective 269.3 kbit/s)...
Hash of data verified.
Compressed 230768 bytes to 125657...
Writing at 0x00010000... (12 %)
Writing at 0x0001cf13... (25 %)
Writing at 0x00022985... (37 %)
Writing at 0x00028771... (50 %)
Writing at 0x0002dfee... (62 %)
Writing at 0x00036c45... (75 %)
Writing at 0x0003eb81... (87 %)
Writing at 0x00044503... (100 %)
Wrote 230768 bytes (125657 compressed) at 0x00010000 in 3.1 seconds (effective 595.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 286.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
